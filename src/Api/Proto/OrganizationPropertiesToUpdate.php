<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : OrganizationPropertiesToUpdate.proto
 */


namespace AgentSIB\Diadoc\Api\Proto;

/**
 * Protobuf message : AgentSIB.Diadoc.Api.Proto.OrganizationPropertiesToUpdate
 */
class OrganizationPropertiesToUpdate extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * OrgId required string = 1
     *
     * @var string
     */
    protected $OrgId = null;

    /**
     * Ogrn optional message = 2
     *
     * @var \AgentSIB\Diadoc\Api\Proto\StringValue
     */
    protected $Ogrn = null;

    /**
     * IfnsCode optional message = 3
     *
     * @var \AgentSIB\Diadoc\Api\Proto\StringValue
     */
    protected $IfnsCode = null;

    /**
     * Address optional message = 4
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Address
     */
    protected $Address = null;

    /**
     * HeadOrganizationProperties optional message = 5
     *
     * @var \AgentSIB\Diadoc\Api\Proto\HeadOrganizationPropertiesToUpdate
     */
    protected $HeadOrganizationProperties = null;

    /**
     * Check if 'OrgId' has a value
     *
     * @return bool
     */
    public function hasOrgId()
    {
        return $this->OrgId !== null;
    }

    /**
     * Get 'OrgId' value
     *
     * @return string
     */
    public function getOrgId()
    {
        return $this->OrgId;
    }

    /**
     * Set 'OrgId' value
     *
     * @param string $value
     */
    public function setOrgId($value)
    {
        $this->OrgId = $value;
    }

    /**
     * Check if 'Ogrn' has a value
     *
     * @return bool
     */
    public function hasOgrn()
    {
        return $this->Ogrn !== null;
    }

    /**
     * Get 'Ogrn' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\StringValue
     */
    public function getOgrn()
    {
        return $this->Ogrn;
    }

    /**
     * Set 'Ogrn' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\StringValue $value
     */
    public function setOgrn(\AgentSIB\Diadoc\Api\Proto\StringValue $value = null)
    {
        $this->Ogrn = $value;
    }

    /**
     * Check if 'IfnsCode' has a value
     *
     * @return bool
     */
    public function hasIfnsCode()
    {
        return $this->IfnsCode !== null;
    }

    /**
     * Get 'IfnsCode' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\StringValue
     */
    public function getIfnsCode()
    {
        return $this->IfnsCode;
    }

    /**
     * Set 'IfnsCode' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\StringValue $value
     */
    public function setIfnsCode(\AgentSIB\Diadoc\Api\Proto\StringValue $value = null)
    {
        $this->IfnsCode = $value;
    }

    /**
     * Check if 'Address' has a value
     *
     * @return bool
     */
    public function hasAddress()
    {
        return $this->Address !== null;
    }

    /**
     * Get 'Address' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Address
     */
    public function getAddress()
    {
        return $this->Address;
    }

    /**
     * Set 'Address' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Address $value
     */
    public function setAddress(\AgentSIB\Diadoc\Api\Proto\Address $value = null)
    {
        $this->Address = $value;
    }

    /**
     * Check if 'HeadOrganizationProperties' has a value
     *
     * @return bool
     */
    public function hasHeadOrganizationProperties()
    {
        return $this->HeadOrganizationProperties !== null;
    }

    /**
     * Get 'HeadOrganizationProperties' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\HeadOrganizationPropertiesToUpdate
     */
    public function getHeadOrganizationProperties()
    {
        return $this->HeadOrganizationProperties;
    }

    /**
     * Set 'HeadOrganizationProperties' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\HeadOrganizationPropertiesToUpdate $value
     */
    public function setHeadOrganizationProperties(\AgentSIB\Diadoc\Api\Proto\HeadOrganizationPropertiesToUpdate $value = null)
    {
        $this->HeadOrganizationProperties = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        if ( ! isset($values['OrgId'])) {
            throw new \InvalidArgumentException('Field "OrgId" (tag 1) is required but has no value.');
        }

        $message = new self();
        $values  = array_merge([
            'Ogrn' => null,
            'IfnsCode' => null,
            'Address' => null,
            'HeadOrganizationProperties' => null
        ], $values);

        $message->setOrgId($values['OrgId']);
        $message->setOgrn($values['Ogrn']);
        $message->setIfnsCode($values['IfnsCode']);
        $message->setAddress($values['Address']);
        $message->setHeadOrganizationProperties($values['HeadOrganizationProperties']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'OrganizationPropertiesToUpdate',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'OrgId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'Ogrn',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.StringValue'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'IfnsCode',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.StringValue'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'Address',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Address'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'HeadOrganizationProperties',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate'
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->OrgId === null) {
            throw new \UnexpectedValueException('Field "\\AgentSIB\\Diadoc\\Api\\Proto\\OrganizationPropertiesToUpdate#OrgId" (tag 1) is required but has no value.');
        }

        if ($this->OrgId !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeString($stream, $this->OrgId);
        }

        if ($this->Ogrn !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeVarint($stream, $this->Ogrn->serializedSize($sizeContext));
            $this->Ogrn->writeTo($context);
        }

        if ($this->IfnsCode !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeVarint($stream, $this->IfnsCode->serializedSize($sizeContext));
            $this->IfnsCode->writeTo($context);
        }

        if ($this->Address !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeVarint($stream, $this->Address->serializedSize($sizeContext));
            $this->Address->writeTo($context);
        }

        if ($this->HeadOrganizationProperties !== null) {
            $writer->writeVarint($stream, 42);
            $writer->writeVarint($stream, $this->HeadOrganizationProperties->serializedSize($sizeContext));
            $this->HeadOrganizationProperties->writeTo($context);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->OrgId = $reader->readString($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\StringValue();

                $this->Ogrn = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\StringValue();

                $this->IfnsCode = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Address();

                $this->Address = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\HeadOrganizationPropertiesToUpdate();

                $this->HeadOrganizationProperties = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->OrgId !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->OrgId);
        }

        if ($this->Ogrn !== null) {
            $innerSize = $this->Ogrn->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->IfnsCode !== null) {
            $innerSize = $this->IfnsCode->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Address !== null) {
            $innerSize = $this->Address->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->HeadOrganizationProperties !== null) {
            $innerSize = $this->HeadOrganizationProperties->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->OrgId = null;
        $this->Ogrn = null;
        $this->IfnsCode = null;
        $this->Address = null;
        $this->HeadOrganizationProperties = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \AgentSIB\Diadoc\Api\Proto\OrganizationPropertiesToUpdate) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->OrgId = ($message->OrgId !== null) ? $message->OrgId : $this->OrgId;
        $this->Ogrn = ($message->Ogrn !== null) ? $message->Ogrn : $this->Ogrn;
        $this->IfnsCode = ($message->IfnsCode !== null) ? $message->IfnsCode : $this->IfnsCode;
        $this->Address = ($message->Address !== null) ? $message->Address : $this->Address;
        $this->HeadOrganizationProperties = ($message->HeadOrganizationProperties !== null) ? $message->HeadOrganizationProperties : $this->HeadOrganizationProperties;
    }


}

