<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Dss/DssSign.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Dss;

/**
 * Protobuf enum : AgentSIB.Diadoc.Api.Proto.Dss.DssOperator
 */
class DssOperator extends \Protobuf\Enum
{

    /**
     * OperatorUnknown = 0
     */
    const OperatorUnknown_VALUE = 0;

    /**
     * Megafon = 1
     */
    const Megafon_VALUE = 1;

    /**
     * Kontur = 2
     */
    const Kontur_VALUE = 2;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    protected static $OperatorUnknown = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    protected static $Megafon = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    protected static $Kontur = null;

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    public static function OperatorUnknown()
    {
        if (self::$OperatorUnknown !== null) {
            return self::$OperatorUnknown;
        }

        return self::$OperatorUnknown = new self('OperatorUnknown', self::OperatorUnknown_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    public static function Megafon()
    {
        if (self::$Megafon !== null) {
            return self::$Megafon;
        }

        return self::$Megafon = new self('Megafon', self::Megafon_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    public static function Kontur()
    {
        if (self::$Kontur !== null) {
            return self::$Kontur;
        }

        return self::$Kontur = new self('Kontur', self::Kontur_VALUE);
    }

    /**
     * @param int $value
     * @return \AgentSIB\Diadoc\Api\Proto\Dss\DssOperator
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::OperatorUnknown();
            case 1: return self::Megafon();
            case 2: return self::Kontur();
            default: return null;
        }
    }


}

