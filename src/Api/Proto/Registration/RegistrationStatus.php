<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Registration/RegistrationRequest.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Registration;

/**
 * Protobuf enum : AgentSIB.Diadoc.Api.Proto.Registration.RegistrationStatus
 */
class RegistrationStatus extends \Protobuf\Enum
{

    /**
     * Unknown = 0
     */
    const Unknown_VALUE = 0;

    /**
     * AccessIsDenied = 1
     */
    const AccessIsDenied_VALUE = 1;

    /**
     * AccessRequestIsRejected = 2
     */
    const AccessRequestIsRejected_VALUE = 2;

    /**
     * CertificateOwnershipProofIsRequired = 3
     */
    const CertificateOwnershipProofIsRequired_VALUE = 3;

    /**
     * CertificateIsNotQualified = 4
     */
    const CertificateIsNotQualified_VALUE = 4;

    /**
     * RegistrationIsCompleted = 5
     */
    const RegistrationIsCompleted_VALUE = 5;

    /**
     * RegistrationIsInProgress = 6
     */
    const RegistrationIsInProgress_VALUE = 6;

    /**
     * RegistrationInBranchIsForbidden = 7
     */
    const RegistrationInBranchIsForbidden_VALUE = 7;

    /**
     * AccessRequestIsPending = 8
     */
    const AccessRequestIsPending_VALUE = 8;

    /**
     * OrganizationNotFound = 9
     */
    const OrganizationNotFound_VALUE = 9;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $Unknown = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $AccessIsDenied = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $AccessRequestIsRejected = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $CertificateOwnershipProofIsRequired = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $CertificateIsNotQualified = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $RegistrationIsCompleted = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $RegistrationIsInProgress = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $RegistrationInBranchIsForbidden = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $AccessRequestIsPending = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    protected static $OrganizationNotFound = null;

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function Unknown()
    {
        if (self::$Unknown !== null) {
            return self::$Unknown;
        }

        return self::$Unknown = new self('Unknown', self::Unknown_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function AccessIsDenied()
    {
        if (self::$AccessIsDenied !== null) {
            return self::$AccessIsDenied;
        }

        return self::$AccessIsDenied = new self('AccessIsDenied', self::AccessIsDenied_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function AccessRequestIsRejected()
    {
        if (self::$AccessRequestIsRejected !== null) {
            return self::$AccessRequestIsRejected;
        }

        return self::$AccessRequestIsRejected = new self('AccessRequestIsRejected', self::AccessRequestIsRejected_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function CertificateOwnershipProofIsRequired()
    {
        if (self::$CertificateOwnershipProofIsRequired !== null) {
            return self::$CertificateOwnershipProofIsRequired;
        }

        return self::$CertificateOwnershipProofIsRequired = new self('CertificateOwnershipProofIsRequired', self::CertificateOwnershipProofIsRequired_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function CertificateIsNotQualified()
    {
        if (self::$CertificateIsNotQualified !== null) {
            return self::$CertificateIsNotQualified;
        }

        return self::$CertificateIsNotQualified = new self('CertificateIsNotQualified', self::CertificateIsNotQualified_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function RegistrationIsCompleted()
    {
        if (self::$RegistrationIsCompleted !== null) {
            return self::$RegistrationIsCompleted;
        }

        return self::$RegistrationIsCompleted = new self('RegistrationIsCompleted', self::RegistrationIsCompleted_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function RegistrationIsInProgress()
    {
        if (self::$RegistrationIsInProgress !== null) {
            return self::$RegistrationIsInProgress;
        }

        return self::$RegistrationIsInProgress = new self('RegistrationIsInProgress', self::RegistrationIsInProgress_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function RegistrationInBranchIsForbidden()
    {
        if (self::$RegistrationInBranchIsForbidden !== null) {
            return self::$RegistrationInBranchIsForbidden;
        }

        return self::$RegistrationInBranchIsForbidden = new self('RegistrationInBranchIsForbidden', self::RegistrationInBranchIsForbidden_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function AccessRequestIsPending()
    {
        if (self::$AccessRequestIsPending !== null) {
            return self::$AccessRequestIsPending;
        }

        return self::$AccessRequestIsPending = new self('AccessRequestIsPending', self::AccessRequestIsPending_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function OrganizationNotFound()
    {
        if (self::$OrganizationNotFound !== null) {
            return self::$OrganizationNotFound;
        }

        return self::$OrganizationNotFound = new self('OrganizationNotFound', self::OrganizationNotFound_VALUE);
    }

    /**
     * @param int $value
     * @return \AgentSIB\Diadoc\Api\Proto\Registration\RegistrationStatus
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::Unknown();
            case 1: return self::AccessIsDenied();
            case 2: return self::AccessRequestIsRejected();
            case 3: return self::CertificateOwnershipProofIsRequired();
            case 4: return self::CertificateIsNotQualified();
            case 5: return self::RegistrationIsCompleted();
            case 6: return self::RegistrationIsInProgress();
            case 7: return self::RegistrationInBranchIsForbidden();
            case 8: return self::AccessRequestIsPending();
            case 9: return self::OrganizationNotFound();
            default: return null;
        }
    }


}

