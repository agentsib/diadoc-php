<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Departments/DepartmentToUpdate.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Departments;

/**
 * Protobuf message : AgentSIB.Diadoc.Api.Proto.Departments.DepartmentToUpdate
 */
class DepartmentToUpdate extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * ParentDepartment optional message = 1
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Departments\ParentDepartmentPatch
     */
    protected $ParentDepartment = null;

    /**
     * DepartmentNaming optional message = 2
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentNamingPatch
     */
    protected $DepartmentNaming = null;

    /**
     * Kpp optional message = 3
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentKppPatch
     */
    protected $Kpp = null;

    /**
     * Address optional message = 4
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentAddressPatch
     */
    protected $Address = null;

    /**
     * Routing optional message = 5
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentRoutingPatch
     */
    protected $Routing = null;

    /**
     * Check if 'ParentDepartment' has a value
     *
     * @return bool
     */
    public function hasParentDepartment()
    {
        return $this->ParentDepartment !== null;
    }

    /**
     * Get 'ParentDepartment' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Departments\ParentDepartmentPatch
     */
    public function getParentDepartment()
    {
        return $this->ParentDepartment;
    }

    /**
     * Set 'ParentDepartment' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Departments\ParentDepartmentPatch $value
     */
    public function setParentDepartment(\AgentSIB\Diadoc\Api\Proto\Departments\ParentDepartmentPatch $value = null)
    {
        $this->ParentDepartment = $value;
    }

    /**
     * Check if 'DepartmentNaming' has a value
     *
     * @return bool
     */
    public function hasDepartmentNaming()
    {
        return $this->DepartmentNaming !== null;
    }

    /**
     * Get 'DepartmentNaming' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentNamingPatch
     */
    public function getDepartmentNaming()
    {
        return $this->DepartmentNaming;
    }

    /**
     * Set 'DepartmentNaming' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentNamingPatch $value
     */
    public function setDepartmentNaming(\AgentSIB\Diadoc\Api\Proto\Departments\DepartmentNamingPatch $value = null)
    {
        $this->DepartmentNaming = $value;
    }

    /**
     * Check if 'Kpp' has a value
     *
     * @return bool
     */
    public function hasKpp()
    {
        return $this->Kpp !== null;
    }

    /**
     * Get 'Kpp' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentKppPatch
     */
    public function getKpp()
    {
        return $this->Kpp;
    }

    /**
     * Set 'Kpp' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentKppPatch $value
     */
    public function setKpp(\AgentSIB\Diadoc\Api\Proto\Departments\DepartmentKppPatch $value = null)
    {
        $this->Kpp = $value;
    }

    /**
     * Check if 'Address' has a value
     *
     * @return bool
     */
    public function hasAddress()
    {
        return $this->Address !== null;
    }

    /**
     * Get 'Address' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentAddressPatch
     */
    public function getAddress()
    {
        return $this->Address;
    }

    /**
     * Set 'Address' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentAddressPatch $value
     */
    public function setAddress(\AgentSIB\Diadoc\Api\Proto\Departments\DepartmentAddressPatch $value = null)
    {
        $this->Address = $value;
    }

    /**
     * Check if 'Routing' has a value
     *
     * @return bool
     */
    public function hasRouting()
    {
        return $this->Routing !== null;
    }

    /**
     * Get 'Routing' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentRoutingPatch
     */
    public function getRouting()
    {
        return $this->Routing;
    }

    /**
     * Set 'Routing' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentRoutingPatch $value
     */
    public function setRouting(\AgentSIB\Diadoc\Api\Proto\Departments\DepartmentRoutingPatch $value = null)
    {
        $this->Routing = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'ParentDepartment' => null,
            'DepartmentNaming' => null,
            'Kpp' => null,
            'Address' => null,
            'Routing' => null
        ], $values);

        $message->setParentDepartment($values['ParentDepartment']);
        $message->setDepartmentNaming($values['DepartmentNaming']);
        $message->setKpp($values['Kpp']);
        $message->setAddress($values['Address']);
        $message->setRouting($values['Routing']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'DepartmentToUpdate',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'ParentDepartment',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Departments.ParentDepartmentPatch'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'DepartmentNaming',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Departments.DepartmentNamingPatch'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'Kpp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Departments.DepartmentKppPatch'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'Address',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Departments.DepartmentAddressPatch'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'Routing',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Departments.DepartmentRoutingPatch'
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->ParentDepartment !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeVarint($stream, $this->ParentDepartment->serializedSize($sizeContext));
            $this->ParentDepartment->writeTo($context);
        }

        if ($this->DepartmentNaming !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeVarint($stream, $this->DepartmentNaming->serializedSize($sizeContext));
            $this->DepartmentNaming->writeTo($context);
        }

        if ($this->Kpp !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeVarint($stream, $this->Kpp->serializedSize($sizeContext));
            $this->Kpp->writeTo($context);
        }

        if ($this->Address !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeVarint($stream, $this->Address->serializedSize($sizeContext));
            $this->Address->writeTo($context);
        }

        if ($this->Routing !== null) {
            $writer->writeVarint($stream, 42);
            $writer->writeVarint($stream, $this->Routing->serializedSize($sizeContext));
            $this->Routing->writeTo($context);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Departments\ParentDepartmentPatch();

                $this->ParentDepartment = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentNamingPatch();

                $this->DepartmentNaming = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentKppPatch();

                $this->Kpp = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentAddressPatch();

                $this->Address = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentRoutingPatch();

                $this->Routing = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->ParentDepartment !== null) {
            $innerSize = $this->ParentDepartment->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->DepartmentNaming !== null) {
            $innerSize = $this->DepartmentNaming->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Kpp !== null) {
            $innerSize = $this->Kpp->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Address !== null) {
            $innerSize = $this->Address->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Routing !== null) {
            $innerSize = $this->Routing->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->ParentDepartment = null;
        $this->DepartmentNaming = null;
        $this->Kpp = null;
        $this->Address = null;
        $this->Routing = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \AgentSIB\Diadoc\Api\Proto\Departments\DepartmentToUpdate) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->ParentDepartment = ($message->ParentDepartment !== null) ? $message->ParentDepartment : $this->ParentDepartment;
        $this->DepartmentNaming = ($message->DepartmentNaming !== null) ? $message->DepartmentNaming : $this->DepartmentNaming;
        $this->Kpp = ($message->Kpp !== null) ? $message->Kpp : $this->Kpp;
        $this->Address = ($message->Address !== null) ? $message->Address : $this->Address;
        $this->Routing = ($message->Routing !== null) ? $message->Routing : $this->Routing;
    }


}

