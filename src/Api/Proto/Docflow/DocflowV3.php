<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Docflow/DocflowV3.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Docflow;

/**
 * Protobuf message : AgentSIB.Diadoc.Api.Proto.Docflow.DocflowV3
 */
class DocflowV3 extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * SenderTitle required message = 1
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\SenderTitleDocflow
     */
    protected $SenderTitle = null;

    /**
     * Confirmation optional message = 2
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ConfirmationDocflow
     */
    protected $Confirmation = null;

    /**
     * ProxyResponse optional message = 11
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow
     */
    protected $ProxyResponse = null;

    /**
     * RecipientReceipt optional message = 4
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3
     */
    protected $RecipientReceipt = null;

    /**
     * RecipientResponse optional message = 5
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow
     */
    protected $RecipientResponse = null;

    /**
     * AmendmentRequest optional message = 6
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\AmendmentRequestDocflow
     */
    protected $AmendmentRequest = null;

    /**
     * Revocation optional message = 7
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\RevocationDocflowV3
     */
    protected $Revocation = null;

    /**
     * SenderReceipt optional message = 8
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3
     */
    protected $SenderReceipt = null;

    /**
     * Resolution optional message = 9
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionDocflowV3
     */
    protected $Resolution = null;

    /**
     * ResolutionEntities optional message = 10
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionEntitiesV3
     */
    protected $ResolutionEntities = null;

    /**
     * OuterDocflows repeated message = 12
     *
     * @var \Protobuf\Collection<\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflow>
     */
    protected $OuterDocflows = null;

    /**
     * OuterDocflowEntities repeated message = 13
     *
     * @var \Protobuf\Collection<\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflowEntities>
     */
    protected $OuterDocflowEntities = null;

    /**
     * Check if 'SenderTitle' has a value
     *
     * @return bool
     */
    public function hasSenderTitle()
    {
        return $this->SenderTitle !== null;
    }

    /**
     * Get 'SenderTitle' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\SenderTitleDocflow
     */
    public function getSenderTitle()
    {
        return $this->SenderTitle;
    }

    /**
     * Set 'SenderTitle' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\SenderTitleDocflow $value
     */
    public function setSenderTitle(\AgentSIB\Diadoc\Api\Proto\Docflow\SenderTitleDocflow $value)
    {
        $this->SenderTitle = $value;
    }

    /**
     * Check if 'Confirmation' has a value
     *
     * @return bool
     */
    public function hasConfirmation()
    {
        return $this->Confirmation !== null;
    }

    /**
     * Get 'Confirmation' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ConfirmationDocflow
     */
    public function getConfirmation()
    {
        return $this->Confirmation;
    }

    /**
     * Set 'Confirmation' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ConfirmationDocflow $value
     */
    public function setConfirmation(\AgentSIB\Diadoc\Api\Proto\Docflow\ConfirmationDocflow $value = null)
    {
        $this->Confirmation = $value;
    }

    /**
     * Check if 'ProxyResponse' has a value
     *
     * @return bool
     */
    public function hasProxyResponse()
    {
        return $this->ProxyResponse !== null;
    }

    /**
     * Get 'ProxyResponse' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow
     */
    public function getProxyResponse()
    {
        return $this->ProxyResponse;
    }

    /**
     * Set 'ProxyResponse' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow $value
     */
    public function setProxyResponse(\AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow $value = null)
    {
        $this->ProxyResponse = $value;
    }

    /**
     * Check if 'RecipientReceipt' has a value
     *
     * @return bool
     */
    public function hasRecipientReceipt()
    {
        return $this->RecipientReceipt !== null;
    }

    /**
     * Get 'RecipientReceipt' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3
     */
    public function getRecipientReceipt()
    {
        return $this->RecipientReceipt;
    }

    /**
     * Set 'RecipientReceipt' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3 $value
     */
    public function setRecipientReceipt(\AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3 $value = null)
    {
        $this->RecipientReceipt = $value;
    }

    /**
     * Check if 'RecipientResponse' has a value
     *
     * @return bool
     */
    public function hasRecipientResponse()
    {
        return $this->RecipientResponse !== null;
    }

    /**
     * Get 'RecipientResponse' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow
     */
    public function getRecipientResponse()
    {
        return $this->RecipientResponse;
    }

    /**
     * Set 'RecipientResponse' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow $value
     */
    public function setRecipientResponse(\AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow $value = null)
    {
        $this->RecipientResponse = $value;
    }

    /**
     * Check if 'AmendmentRequest' has a value
     *
     * @return bool
     */
    public function hasAmendmentRequest()
    {
        return $this->AmendmentRequest !== null;
    }

    /**
     * Get 'AmendmentRequest' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\AmendmentRequestDocflow
     */
    public function getAmendmentRequest()
    {
        return $this->AmendmentRequest;
    }

    /**
     * Set 'AmendmentRequest' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\AmendmentRequestDocflow $value
     */
    public function setAmendmentRequest(\AgentSIB\Diadoc\Api\Proto\Docflow\AmendmentRequestDocflow $value = null)
    {
        $this->AmendmentRequest = $value;
    }

    /**
     * Check if 'Revocation' has a value
     *
     * @return bool
     */
    public function hasRevocation()
    {
        return $this->Revocation !== null;
    }

    /**
     * Get 'Revocation' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\RevocationDocflowV3
     */
    public function getRevocation()
    {
        return $this->Revocation;
    }

    /**
     * Set 'Revocation' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\RevocationDocflowV3 $value
     */
    public function setRevocation(\AgentSIB\Diadoc\Api\Proto\Docflow\RevocationDocflowV3 $value = null)
    {
        $this->Revocation = $value;
    }

    /**
     * Check if 'SenderReceipt' has a value
     *
     * @return bool
     */
    public function hasSenderReceipt()
    {
        return $this->SenderReceipt !== null;
    }

    /**
     * Get 'SenderReceipt' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3
     */
    public function getSenderReceipt()
    {
        return $this->SenderReceipt;
    }

    /**
     * Set 'SenderReceipt' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3 $value
     */
    public function setSenderReceipt(\AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3 $value = null)
    {
        $this->SenderReceipt = $value;
    }

    /**
     * Check if 'Resolution' has a value
     *
     * @return bool
     */
    public function hasResolution()
    {
        return $this->Resolution !== null;
    }

    /**
     * Get 'Resolution' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionDocflowV3
     */
    public function getResolution()
    {
        return $this->Resolution;
    }

    /**
     * Set 'Resolution' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionDocflowV3 $value
     */
    public function setResolution(\AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionDocflowV3 $value = null)
    {
        $this->Resolution = $value;
    }

    /**
     * Check if 'ResolutionEntities' has a value
     *
     * @return bool
     */
    public function hasResolutionEntities()
    {
        return $this->ResolutionEntities !== null;
    }

    /**
     * Get 'ResolutionEntities' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionEntitiesV3
     */
    public function getResolutionEntities()
    {
        return $this->ResolutionEntities;
    }

    /**
     * Set 'ResolutionEntities' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionEntitiesV3 $value
     */
    public function setResolutionEntities(\AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionEntitiesV3 $value = null)
    {
        $this->ResolutionEntities = $value;
    }

    /**
     * Check if 'OuterDocflows' has a value
     *
     * @return bool
     */
    public function hasOuterDocflowsList()
    {
        return $this->OuterDocflows !== null;
    }

    /**
     * Get 'OuterDocflows' value
     *
     * @return \Protobuf\Collection<\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflow>
     */
    public function getOuterDocflowsList()
    {
        return $this->OuterDocflows;
    }

    /**
     * Set 'OuterDocflows' value
     *
     * @param \Protobuf\Collection<\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflow> $value
     */
    public function setOuterDocflowsList(\Protobuf\Collection $value = null)
    {
        $this->OuterDocflows = $value;
    }

    /**
     * Add a new element to 'OuterDocflows'
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflow $value
     */
    public function addOuterDocflows(\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflow $value)
    {
        if ($this->OuterDocflows === null) {
            $this->OuterDocflows = new \Protobuf\MessageCollection();
        }

        $this->OuterDocflows->add($value);
    }

    /**
     * Check if 'OuterDocflowEntities' has a value
     *
     * @return bool
     */
    public function hasOuterDocflowEntitiesList()
    {
        return $this->OuterDocflowEntities !== null;
    }

    /**
     * Get 'OuterDocflowEntities' value
     *
     * @return \Protobuf\Collection<\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflowEntities>
     */
    public function getOuterDocflowEntitiesList()
    {
        return $this->OuterDocflowEntities;
    }

    /**
     * Set 'OuterDocflowEntities' value
     *
     * @param \Protobuf\Collection<\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflowEntities> $value
     */
    public function setOuterDocflowEntitiesList(\Protobuf\Collection $value = null)
    {
        $this->OuterDocflowEntities = $value;
    }

    /**
     * Add a new element to 'OuterDocflowEntities'
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflowEntities $value
     */
    public function addOuterDocflowEntities(\AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflowEntities $value)
    {
        if ($this->OuterDocflowEntities === null) {
            $this->OuterDocflowEntities = new \Protobuf\MessageCollection();
        }

        $this->OuterDocflowEntities->add($value);
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        if ( ! isset($values['SenderTitle'])) {
            throw new \InvalidArgumentException('Field "SenderTitle" (tag 1) is required but has no value.');
        }

        $message = new self();
        $values  = array_merge([
            'Confirmation' => null,
            'ProxyResponse' => null,
            'RecipientReceipt' => null,
            'RecipientResponse' => null,
            'AmendmentRequest' => null,
            'Revocation' => null,
            'SenderReceipt' => null,
            'Resolution' => null,
            'ResolutionEntities' => null,
            'OuterDocflows' => [],
            'OuterDocflowEntities' => []
        ], $values);

        $message->setSenderTitle($values['SenderTitle']);
        $message->setConfirmation($values['Confirmation']);
        $message->setProxyResponse($values['ProxyResponse']);
        $message->setRecipientReceipt($values['RecipientReceipt']);
        $message->setRecipientResponse($values['RecipientResponse']);
        $message->setAmendmentRequest($values['AmendmentRequest']);
        $message->setRevocation($values['Revocation']);
        $message->setSenderReceipt($values['SenderReceipt']);
        $message->setResolution($values['Resolution']);
        $message->setResolutionEntities($values['ResolutionEntities']);

        foreach ($values['OuterDocflows'] as $item) {
            $message->addOuterDocflows($item);
        }

        foreach ($values['OuterDocflowEntities'] as $item) {
            $message->addOuterDocflowEntities($item);
        }

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'DocflowV3',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'SenderTitle',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.SenderTitleDocflow'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'Confirmation',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ConfirmationDocflow'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'ProxyResponse',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ParticipantResponseDocflow'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'RecipientReceipt',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ReceiptDocflowV3'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'RecipientResponse',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ParticipantResponseDocflow'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'AmendmentRequest',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.AmendmentRequestDocflow'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'Revocation',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.RevocationDocflowV3'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'SenderReceipt',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ReceiptDocflowV3'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'Resolution',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ResolutionDocflowV3'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'ResolutionEntities',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.ResolutionEntitiesV3'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'OuterDocflows',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.OuterDocflow'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'OuterDocflowEntities',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Docflow.OuterDocflowEntities'
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->SenderTitle === null) {
            throw new \UnexpectedValueException('Field "\\AgentSIB\\Diadoc\\Api\\Proto\\Docflow\\DocflowV3#SenderTitle" (tag 1) is required but has no value.');
        }

        if ($this->SenderTitle !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeVarint($stream, $this->SenderTitle->serializedSize($sizeContext));
            $this->SenderTitle->writeTo($context);
        }

        if ($this->Confirmation !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeVarint($stream, $this->Confirmation->serializedSize($sizeContext));
            $this->Confirmation->writeTo($context);
        }

        if ($this->ProxyResponse !== null) {
            $writer->writeVarint($stream, 90);
            $writer->writeVarint($stream, $this->ProxyResponse->serializedSize($sizeContext));
            $this->ProxyResponse->writeTo($context);
        }

        if ($this->RecipientReceipt !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeVarint($stream, $this->RecipientReceipt->serializedSize($sizeContext));
            $this->RecipientReceipt->writeTo($context);
        }

        if ($this->RecipientResponse !== null) {
            $writer->writeVarint($stream, 42);
            $writer->writeVarint($stream, $this->RecipientResponse->serializedSize($sizeContext));
            $this->RecipientResponse->writeTo($context);
        }

        if ($this->AmendmentRequest !== null) {
            $writer->writeVarint($stream, 50);
            $writer->writeVarint($stream, $this->AmendmentRequest->serializedSize($sizeContext));
            $this->AmendmentRequest->writeTo($context);
        }

        if ($this->Revocation !== null) {
            $writer->writeVarint($stream, 58);
            $writer->writeVarint($stream, $this->Revocation->serializedSize($sizeContext));
            $this->Revocation->writeTo($context);
        }

        if ($this->SenderReceipt !== null) {
            $writer->writeVarint($stream, 66);
            $writer->writeVarint($stream, $this->SenderReceipt->serializedSize($sizeContext));
            $this->SenderReceipt->writeTo($context);
        }

        if ($this->Resolution !== null) {
            $writer->writeVarint($stream, 74);
            $writer->writeVarint($stream, $this->Resolution->serializedSize($sizeContext));
            $this->Resolution->writeTo($context);
        }

        if ($this->ResolutionEntities !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeVarint($stream, $this->ResolutionEntities->serializedSize($sizeContext));
            $this->ResolutionEntities->writeTo($context);
        }

        if ($this->OuterDocflows !== null) {
            foreach ($this->OuterDocflows as $val) {
                $writer->writeVarint($stream, 98);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->OuterDocflowEntities !== null) {
            foreach ($this->OuterDocflowEntities as $val) {
                $writer->writeVarint($stream, 106);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\SenderTitleDocflow();

                $this->SenderTitle = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ConfirmationDocflow();

                $this->Confirmation = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow();

                $this->ProxyResponse = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3();

                $this->RecipientReceipt = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ParticipantResponseDocflow();

                $this->RecipientResponse = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\AmendmentRequestDocflow();

                $this->AmendmentRequest = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\RevocationDocflowV3();

                $this->Revocation = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ReceiptDocflowV3();

                $this->SenderReceipt = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionDocflowV3();

                $this->Resolution = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionEntitiesV3();

                $this->ResolutionEntities = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflow();

                if ($this->OuterDocflows === null) {
                    $this->OuterDocflows = new \Protobuf\MessageCollection();
                }

                $this->OuterDocflows->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Docflow\OuterDocflowEntities();

                if ($this->OuterDocflowEntities === null) {
                    $this->OuterDocflowEntities = new \Protobuf\MessageCollection();
                }

                $this->OuterDocflowEntities->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->SenderTitle !== null) {
            $innerSize = $this->SenderTitle->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Confirmation !== null) {
            $innerSize = $this->Confirmation->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->ProxyResponse !== null) {
            $innerSize = $this->ProxyResponse->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->RecipientReceipt !== null) {
            $innerSize = $this->RecipientReceipt->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->RecipientResponse !== null) {
            $innerSize = $this->RecipientResponse->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->AmendmentRequest !== null) {
            $innerSize = $this->AmendmentRequest->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Revocation !== null) {
            $innerSize = $this->Revocation->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->SenderReceipt !== null) {
            $innerSize = $this->SenderReceipt->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->Resolution !== null) {
            $innerSize = $this->Resolution->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->ResolutionEntities !== null) {
            $innerSize = $this->ResolutionEntities->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->OuterDocflows !== null) {
            foreach ($this->OuterDocflows as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->OuterDocflowEntities !== null) {
            foreach ($this->OuterDocflowEntities as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->SenderTitle = null;
        $this->Confirmation = null;
        $this->ProxyResponse = null;
        $this->RecipientReceipt = null;
        $this->RecipientResponse = null;
        $this->AmendmentRequest = null;
        $this->Revocation = null;
        $this->SenderReceipt = null;
        $this->Resolution = null;
        $this->ResolutionEntities = null;
        $this->OuterDocflows = null;
        $this->OuterDocflowEntities = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \AgentSIB\Diadoc\Api\Proto\Docflow\DocflowV3) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->SenderTitle = ($message->SenderTitle !== null) ? $message->SenderTitle : $this->SenderTitle;
        $this->Confirmation = ($message->Confirmation !== null) ? $message->Confirmation : $this->Confirmation;
        $this->ProxyResponse = ($message->ProxyResponse !== null) ? $message->ProxyResponse : $this->ProxyResponse;
        $this->RecipientReceipt = ($message->RecipientReceipt !== null) ? $message->RecipientReceipt : $this->RecipientReceipt;
        $this->RecipientResponse = ($message->RecipientResponse !== null) ? $message->RecipientResponse : $this->RecipientResponse;
        $this->AmendmentRequest = ($message->AmendmentRequest !== null) ? $message->AmendmentRequest : $this->AmendmentRequest;
        $this->Revocation = ($message->Revocation !== null) ? $message->Revocation : $this->Revocation;
        $this->SenderReceipt = ($message->SenderReceipt !== null) ? $message->SenderReceipt : $this->SenderReceipt;
        $this->Resolution = ($message->Resolution !== null) ? $message->Resolution : $this->Resolution;
        $this->ResolutionEntities = ($message->ResolutionEntities !== null) ? $message->ResolutionEntities : $this->ResolutionEntities;
        $this->OuterDocflows = ($message->OuterDocflows !== null) ? $message->OuterDocflows : $this->OuterDocflows;
        $this->OuterDocflowEntities = ($message->OuterDocflowEntities !== null) ? $message->OuterDocflowEntities : $this->OuterDocflowEntities;
    }


}

