<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Docflow/ResolutionDocflowV3.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Docflow;

/**
 * Protobuf enum : AgentSIB.Diadoc.Api.Proto.Docflow.ResolutionStatus
 */
class ResolutionStatus extends \Protobuf\Enum
{

    /**
     * UnknownStatus = 0
     */
    const UnknownStatus_VALUE = 0;

    /**
     * None = 1
     */
    const None_VALUE = 1;

    /**
     * Approved = 2
     */
    const Approved_VALUE = 2;

    /**
     * Disapproved = 3
     */
    const Disapproved_VALUE = 3;

    /**
     * ApprovementRequested = 4
     */
    const ApprovementRequested_VALUE = 4;

    /**
     * ApprovementSignatureRequested = 5
     */
    const ApprovementSignatureRequested_VALUE = 5;

    /**
     * PrimarySignatureRequested = 6
     */
    const PrimarySignatureRequested_VALUE = 6;

    /**
     * SignatureRequestRejected = 7
     */
    const SignatureRequestRejected_VALUE = 7;

    /**
     * SignedWithApprovingSignature = 8
     */
    const SignedWithApprovingSignature_VALUE = 8;

    /**
     * SignedWithPrimarySignature = 9
     */
    const SignedWithPrimarySignature_VALUE = 9;

    /**
     * PrimarySignatureRejected = 10
     */
    const PrimarySignatureRejected_VALUE = 10;

    /**
     * ActionsRequested = 11
     */
    const ActionsRequested_VALUE = 11;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $UnknownStatus = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $None = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $Approved = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $Disapproved = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $ApprovementRequested = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $ApprovementSignatureRequested = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $PrimarySignatureRequested = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $SignatureRequestRejected = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $SignedWithApprovingSignature = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $SignedWithPrimarySignature = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $PrimarySignatureRejected = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    protected static $ActionsRequested = null;

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function UnknownStatus()
    {
        if (self::$UnknownStatus !== null) {
            return self::$UnknownStatus;
        }

        return self::$UnknownStatus = new self('UnknownStatus', self::UnknownStatus_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function None()
    {
        if (self::$None !== null) {
            return self::$None;
        }

        return self::$None = new self('None', self::None_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function Approved()
    {
        if (self::$Approved !== null) {
            return self::$Approved;
        }

        return self::$Approved = new self('Approved', self::Approved_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function Disapproved()
    {
        if (self::$Disapproved !== null) {
            return self::$Disapproved;
        }

        return self::$Disapproved = new self('Disapproved', self::Disapproved_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function ApprovementRequested()
    {
        if (self::$ApprovementRequested !== null) {
            return self::$ApprovementRequested;
        }

        return self::$ApprovementRequested = new self('ApprovementRequested', self::ApprovementRequested_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function ApprovementSignatureRequested()
    {
        if (self::$ApprovementSignatureRequested !== null) {
            return self::$ApprovementSignatureRequested;
        }

        return self::$ApprovementSignatureRequested = new self('ApprovementSignatureRequested', self::ApprovementSignatureRequested_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function PrimarySignatureRequested()
    {
        if (self::$PrimarySignatureRequested !== null) {
            return self::$PrimarySignatureRequested;
        }

        return self::$PrimarySignatureRequested = new self('PrimarySignatureRequested', self::PrimarySignatureRequested_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function SignatureRequestRejected()
    {
        if (self::$SignatureRequestRejected !== null) {
            return self::$SignatureRequestRejected;
        }

        return self::$SignatureRequestRejected = new self('SignatureRequestRejected', self::SignatureRequestRejected_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function SignedWithApprovingSignature()
    {
        if (self::$SignedWithApprovingSignature !== null) {
            return self::$SignedWithApprovingSignature;
        }

        return self::$SignedWithApprovingSignature = new self('SignedWithApprovingSignature', self::SignedWithApprovingSignature_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function SignedWithPrimarySignature()
    {
        if (self::$SignedWithPrimarySignature !== null) {
            return self::$SignedWithPrimarySignature;
        }

        return self::$SignedWithPrimarySignature = new self('SignedWithPrimarySignature', self::SignedWithPrimarySignature_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function PrimarySignatureRejected()
    {
        if (self::$PrimarySignatureRejected !== null) {
            return self::$PrimarySignatureRejected;
        }

        return self::$PrimarySignatureRejected = new self('PrimarySignatureRejected', self::PrimarySignatureRejected_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function ActionsRequested()
    {
        if (self::$ActionsRequested !== null) {
            return self::$ActionsRequested;
        }

        return self::$ActionsRequested = new self('ActionsRequested', self::ActionsRequested_VALUE);
    }

    /**
     * @param int $value
     * @return \AgentSIB\Diadoc\Api\Proto\Docflow\ResolutionStatus
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::UnknownStatus();
            case 1: return self::None();
            case 2: return self::Approved();
            case 3: return self::Disapproved();
            case 4: return self::ApprovementRequested();
            case 5: return self::ApprovementSignatureRequested();
            case 6: return self::PrimarySignatureRequested();
            case 7: return self::SignatureRequestRejected();
            case 8: return self::SignedWithApprovingSignature();
            case 9: return self::SignedWithPrimarySignature();
            case 10: return self::PrimarySignatureRejected();
            case 11: return self::ActionsRequested();
            default: return null;
        }
    }


}

