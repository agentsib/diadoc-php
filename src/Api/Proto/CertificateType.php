<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : CertificateInfoV2.proto
 */


namespace AgentSIB\Diadoc\Api\Proto;

/**
 * Protobuf enum : AgentSIB.Diadoc.Api.Proto.CertificateType
 */
class CertificateType extends \Protobuf\Enum
{

    /**
     * UnknownCertificateType = 0
     */
    const UnknownCertificateType_VALUE = 0;

    /**
     * TokenCertificateType = 1
     */
    const TokenCertificateType_VALUE = 1;

    /**
     * DssCertificateType = 2
     */
    const DssCertificateType_VALUE = 2;

    /**
     * KonturCertificateType = 3
     */
    const KonturCertificateType_VALUE = 3;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    protected static $UnknownCertificateType = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    protected static $TokenCertificateType = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    protected static $DssCertificateType = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    protected static $KonturCertificateType = null;

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    public static function UnknownCertificateType()
    {
        if (self::$UnknownCertificateType !== null) {
            return self::$UnknownCertificateType;
        }

        return self::$UnknownCertificateType = new self('UnknownCertificateType', self::UnknownCertificateType_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    public static function TokenCertificateType()
    {
        if (self::$TokenCertificateType !== null) {
            return self::$TokenCertificateType;
        }

        return self::$TokenCertificateType = new self('TokenCertificateType', self::TokenCertificateType_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    public static function DssCertificateType()
    {
        if (self::$DssCertificateType !== null) {
            return self::$DssCertificateType;
        }

        return self::$DssCertificateType = new self('DssCertificateType', self::DssCertificateType_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    public static function KonturCertificateType()
    {
        if (self::$KonturCertificateType !== null) {
            return self::$KonturCertificateType;
        }

        return self::$KonturCertificateType = new self('KonturCertificateType', self::KonturCertificateType_VALUE);
    }

    /**
     * @param int $value
     * @return \AgentSIB\Diadoc\Api\Proto\CertificateType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::UnknownCertificateType();
            case 1: return self::TokenCertificateType();
            case 2: return self::DssCertificateType();
            case 3: return self::KonturCertificateType();
            default: return null;
        }
    }


}

