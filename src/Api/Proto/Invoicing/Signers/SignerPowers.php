<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Invoicing/ExtendedSigner.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Invoicing\Signers;

/**
 * Protobuf enum : AgentSIB.Diadoc.Api.Proto.Invoicing.Signers.SignerPowers
 */
class SignerPowers extends \Protobuf\Enum
{

    /**
     * InvoiceSigner = 0
     */
    const InvoiceSigner_VALUE = 0;

    /**
     * PersonMadeOperation = 1
     */
    const PersonMadeOperation_VALUE = 1;

    /**
     * MadeAndSignOperation = 2
     */
    const MadeAndSignOperation_VALUE = 2;

    /**
     * PersonDocumentedOperation = 3
     */
    const PersonDocumentedOperation_VALUE = 3;

    /**
     * MadeOperationAndSignedInvoice = 4
     */
    const MadeOperationAndSignedInvoice_VALUE = 4;

    /**
     * MadeAndResponsibleForOperationAndSignedInvoice = 5
     */
    const MadeAndResponsibleForOperationAndSignedInvoice_VALUE = 5;

    /**
     * ResponsibleForOperationAndSignerForInvoice = 6
     */
    const ResponsibleForOperationAndSignerForInvoice_VALUE = 6;

    /**
     * ChairmanCommission = 7
     */
    const ChairmanCommission_VALUE = 7;

    /**
     * MemberCommission = 8
     */
    const MemberCommission_VALUE = 8;

    /**
     * PersonApprovedDocument = 21
     */
    const PersonApprovedDocument_VALUE = 21;

    /**
     * PersonConfirmedDocument = 22
     */
    const PersonConfirmedDocument_VALUE = 22;

    /**
     * PersonAgreedOnDocument = 23
     */
    const PersonAgreedOnDocument_VALUE = 23;

    /**
     * PersonOtherPower = 29
     */
    const PersonOtherPower_VALUE = 29;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $InvoiceSigner = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $PersonMadeOperation = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $MadeAndSignOperation = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $PersonDocumentedOperation = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $MadeOperationAndSignedInvoice = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $MadeAndResponsibleForOperationAndSignedInvoice = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $ResponsibleForOperationAndSignerForInvoice = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $ChairmanCommission = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $MemberCommission = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $PersonApprovedDocument = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $PersonConfirmedDocument = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $PersonAgreedOnDocument = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    protected static $PersonOtherPower = null;

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function InvoiceSigner()
    {
        if (self::$InvoiceSigner !== null) {
            return self::$InvoiceSigner;
        }

        return self::$InvoiceSigner = new self('InvoiceSigner', self::InvoiceSigner_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function PersonMadeOperation()
    {
        if (self::$PersonMadeOperation !== null) {
            return self::$PersonMadeOperation;
        }

        return self::$PersonMadeOperation = new self('PersonMadeOperation', self::PersonMadeOperation_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function MadeAndSignOperation()
    {
        if (self::$MadeAndSignOperation !== null) {
            return self::$MadeAndSignOperation;
        }

        return self::$MadeAndSignOperation = new self('MadeAndSignOperation', self::MadeAndSignOperation_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function PersonDocumentedOperation()
    {
        if (self::$PersonDocumentedOperation !== null) {
            return self::$PersonDocumentedOperation;
        }

        return self::$PersonDocumentedOperation = new self('PersonDocumentedOperation', self::PersonDocumentedOperation_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function MadeOperationAndSignedInvoice()
    {
        if (self::$MadeOperationAndSignedInvoice !== null) {
            return self::$MadeOperationAndSignedInvoice;
        }

        return self::$MadeOperationAndSignedInvoice = new self('MadeOperationAndSignedInvoice', self::MadeOperationAndSignedInvoice_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function MadeAndResponsibleForOperationAndSignedInvoice()
    {
        if (self::$MadeAndResponsibleForOperationAndSignedInvoice !== null) {
            return self::$MadeAndResponsibleForOperationAndSignedInvoice;
        }

        return self::$MadeAndResponsibleForOperationAndSignedInvoice = new self('MadeAndResponsibleForOperationAndSignedInvoice', self::MadeAndResponsibleForOperationAndSignedInvoice_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function ResponsibleForOperationAndSignerForInvoice()
    {
        if (self::$ResponsibleForOperationAndSignerForInvoice !== null) {
            return self::$ResponsibleForOperationAndSignerForInvoice;
        }

        return self::$ResponsibleForOperationAndSignerForInvoice = new self('ResponsibleForOperationAndSignerForInvoice', self::ResponsibleForOperationAndSignerForInvoice_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function ChairmanCommission()
    {
        if (self::$ChairmanCommission !== null) {
            return self::$ChairmanCommission;
        }

        return self::$ChairmanCommission = new self('ChairmanCommission', self::ChairmanCommission_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function MemberCommission()
    {
        if (self::$MemberCommission !== null) {
            return self::$MemberCommission;
        }

        return self::$MemberCommission = new self('MemberCommission', self::MemberCommission_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function PersonApprovedDocument()
    {
        if (self::$PersonApprovedDocument !== null) {
            return self::$PersonApprovedDocument;
        }

        return self::$PersonApprovedDocument = new self('PersonApprovedDocument', self::PersonApprovedDocument_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function PersonConfirmedDocument()
    {
        if (self::$PersonConfirmedDocument !== null) {
            return self::$PersonConfirmedDocument;
        }

        return self::$PersonConfirmedDocument = new self('PersonConfirmedDocument', self::PersonConfirmedDocument_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function PersonAgreedOnDocument()
    {
        if (self::$PersonAgreedOnDocument !== null) {
            return self::$PersonAgreedOnDocument;
        }

        return self::$PersonAgreedOnDocument = new self('PersonAgreedOnDocument', self::PersonAgreedOnDocument_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function PersonOtherPower()
    {
        if (self::$PersonOtherPower !== null) {
            return self::$PersonOtherPower;
        }

        return self::$PersonOtherPower = new self('PersonOtherPower', self::PersonOtherPower_VALUE);
    }

    /**
     * @param int $value
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Signers\SignerPowers
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::InvoiceSigner();
            case 1: return self::PersonMadeOperation();
            case 2: return self::MadeAndSignOperation();
            case 3: return self::PersonDocumentedOperation();
            case 4: return self::MadeOperationAndSignedInvoice();
            case 5: return self::MadeAndResponsibleForOperationAndSignedInvoice();
            case 6: return self::ResponsibleForOperationAndSignerForInvoice();
            case 7: return self::ChairmanCommission();
            case 8: return self::MemberCommission();
            case 21: return self::PersonApprovedDocument();
            case 22: return self::PersonConfirmedDocument();
            case 23: return self::PersonAgreedOnDocument();
            case 29: return self::PersonOtherPower();
            default: return null;
        }
    }


}

