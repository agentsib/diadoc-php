<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Invoicing/ExtendedOrganizationInfo.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations;

/**
 * Protobuf message :
 * AgentSIB.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo
 */
class ExtendedOrganizationInfo extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * BoxId optional string = 1
     *
     * @var string
     */
    protected $BoxId = null;

    /**
     * OrgName optional string = 2
     *
     * @var string
     */
    protected $OrgName = null;

    /**
     * Inn optional string = 3
     *
     * @var string
     */
    protected $Inn = null;

    /**
     * Kpp optional string = 4
     *
     * @var string
     */
    protected $Kpp = null;

    /**
     * Address optional message = 5
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Address
     */
    protected $Address = null;

    /**
     * FnsParticipantId optional string = 6
     *
     * @var string
     */
    protected $FnsParticipantId = null;

    /**
     * OrgType required enum = 7
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations\OrgType
     */
    protected $OrgType = null;

    /**
     * Okopf optional string = 8
     *
     * @var string
     */
    protected $Okopf = null;

    /**
     * Okpo optional string = 9
     *
     * @var string
     */
    protected $Okpo = null;

    /**
     * Okdp optional string = 10
     *
     * @var string
     */
    protected $Okdp = null;

    /**
     * Phone optional string = 11
     *
     * @var string
     */
    protected $Phone = null;

    /**
     * Email optional string = 12
     *
     * @var string
     */
    protected $Email = null;

    /**
     * CorrespondentAccount optional string = 13
     *
     * @var string
     */
    protected $CorrespondentAccount = null;

    /**
     * BankAccountNumber optional string = 14
     *
     * @var string
     */
    protected $BankAccountNumber = null;

    /**
     * BankName optional string = 15
     *
     * @var string
     */
    protected $BankName = null;

    /**
     * BankId optional string = 16
     *
     * @var string
     */
    protected $BankId = null;

    /**
     * Department optional string = 17
     *
     * @var string
     */
    protected $Department = null;

    /**
     * OrganizationAdditionalInfo optional string = 18
     *
     * @var string
     */
    protected $OrganizationAdditionalInfo = null;

    /**
     * OrganizationOrPersonInfo optional string = 19
     *
     * @var string
     */
    protected $OrganizationOrPersonInfo = null;

    /**
     * IndividualEntityRegistrationCertificate optional string = 20
     *
     * @var string
     */
    protected $IndividualEntityRegistrationCertificate = null;

    /**
     * Country optional string = 21
     *
     * @var string
     */
    protected $Country = null;

    /**
     * Check if 'BoxId' has a value
     *
     * @return bool
     */
    public function hasBoxId()
    {
        return $this->BoxId !== null;
    }

    /**
     * Get 'BoxId' value
     *
     * @return string
     */
    public function getBoxId()
    {
        return $this->BoxId;
    }

    /**
     * Set 'BoxId' value
     *
     * @param string $value
     */
    public function setBoxId($value = null)
    {
        $this->BoxId = $value;
    }

    /**
     * Check if 'OrgName' has a value
     *
     * @return bool
     */
    public function hasOrgName()
    {
        return $this->OrgName !== null;
    }

    /**
     * Get 'OrgName' value
     *
     * @return string
     */
    public function getOrgName()
    {
        return $this->OrgName;
    }

    /**
     * Set 'OrgName' value
     *
     * @param string $value
     */
    public function setOrgName($value = null)
    {
        $this->OrgName = $value;
    }

    /**
     * Check if 'Inn' has a value
     *
     * @return bool
     */
    public function hasInn()
    {
        return $this->Inn !== null;
    }

    /**
     * Get 'Inn' value
     *
     * @return string
     */
    public function getInn()
    {
        return $this->Inn;
    }

    /**
     * Set 'Inn' value
     *
     * @param string $value
     */
    public function setInn($value = null)
    {
        $this->Inn = $value;
    }

    /**
     * Check if 'Kpp' has a value
     *
     * @return bool
     */
    public function hasKpp()
    {
        return $this->Kpp !== null;
    }

    /**
     * Get 'Kpp' value
     *
     * @return string
     */
    public function getKpp()
    {
        return $this->Kpp;
    }

    /**
     * Set 'Kpp' value
     *
     * @param string $value
     */
    public function setKpp($value = null)
    {
        $this->Kpp = $value;
    }

    /**
     * Check if 'Address' has a value
     *
     * @return bool
     */
    public function hasAddress()
    {
        return $this->Address !== null;
    }

    /**
     * Get 'Address' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Address
     */
    public function getAddress()
    {
        return $this->Address;
    }

    /**
     * Set 'Address' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Address $value
     */
    public function setAddress(\AgentSIB\Diadoc\Api\Proto\Address $value = null)
    {
        $this->Address = $value;
    }

    /**
     * Check if 'FnsParticipantId' has a value
     *
     * @return bool
     */
    public function hasFnsParticipantId()
    {
        return $this->FnsParticipantId !== null;
    }

    /**
     * Get 'FnsParticipantId' value
     *
     * @return string
     */
    public function getFnsParticipantId()
    {
        return $this->FnsParticipantId;
    }

    /**
     * Set 'FnsParticipantId' value
     *
     * @param string $value
     */
    public function setFnsParticipantId($value = null)
    {
        $this->FnsParticipantId = $value;
    }

    /**
     * Check if 'OrgType' has a value
     *
     * @return bool
     */
    public function hasOrgType()
    {
        return $this->OrgType !== null;
    }

    /**
     * Get 'OrgType' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations\OrgType
     */
    public function getOrgType()
    {
        return $this->OrgType;
    }

    /**
     * Set 'OrgType' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations\OrgType $value
     */
    public function setOrgType(\AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations\OrgType $value)
    {
        $this->OrgType = $value;
    }

    /**
     * Check if 'Okopf' has a value
     *
     * @return bool
     */
    public function hasOkopf()
    {
        return $this->Okopf !== null;
    }

    /**
     * Get 'Okopf' value
     *
     * @return string
     */
    public function getOkopf()
    {
        return $this->Okopf;
    }

    /**
     * Set 'Okopf' value
     *
     * @param string $value
     */
    public function setOkopf($value = null)
    {
        $this->Okopf = $value;
    }

    /**
     * Check if 'Okpo' has a value
     *
     * @return bool
     */
    public function hasOkpo()
    {
        return $this->Okpo !== null;
    }

    /**
     * Get 'Okpo' value
     *
     * @return string
     */
    public function getOkpo()
    {
        return $this->Okpo;
    }

    /**
     * Set 'Okpo' value
     *
     * @param string $value
     */
    public function setOkpo($value = null)
    {
        $this->Okpo = $value;
    }

    /**
     * Check if 'Okdp' has a value
     *
     * @return bool
     */
    public function hasOkdp()
    {
        return $this->Okdp !== null;
    }

    /**
     * Get 'Okdp' value
     *
     * @return string
     */
    public function getOkdp()
    {
        return $this->Okdp;
    }

    /**
     * Set 'Okdp' value
     *
     * @param string $value
     */
    public function setOkdp($value = null)
    {
        $this->Okdp = $value;
    }

    /**
     * Check if 'Phone' has a value
     *
     * @return bool
     */
    public function hasPhone()
    {
        return $this->Phone !== null;
    }

    /**
     * Get 'Phone' value
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->Phone;
    }

    /**
     * Set 'Phone' value
     *
     * @param string $value
     */
    public function setPhone($value = null)
    {
        $this->Phone = $value;
    }

    /**
     * Check if 'Email' has a value
     *
     * @return bool
     */
    public function hasEmail()
    {
        return $this->Email !== null;
    }

    /**
     * Get 'Email' value
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->Email;
    }

    /**
     * Set 'Email' value
     *
     * @param string $value
     */
    public function setEmail($value = null)
    {
        $this->Email = $value;
    }

    /**
     * Check if 'CorrespondentAccount' has a value
     *
     * @return bool
     */
    public function hasCorrespondentAccount()
    {
        return $this->CorrespondentAccount !== null;
    }

    /**
     * Get 'CorrespondentAccount' value
     *
     * @return string
     */
    public function getCorrespondentAccount()
    {
        return $this->CorrespondentAccount;
    }

    /**
     * Set 'CorrespondentAccount' value
     *
     * @param string $value
     */
    public function setCorrespondentAccount($value = null)
    {
        $this->CorrespondentAccount = $value;
    }

    /**
     * Check if 'BankAccountNumber' has a value
     *
     * @return bool
     */
    public function hasBankAccountNumber()
    {
        return $this->BankAccountNumber !== null;
    }

    /**
     * Get 'BankAccountNumber' value
     *
     * @return string
     */
    public function getBankAccountNumber()
    {
        return $this->BankAccountNumber;
    }

    /**
     * Set 'BankAccountNumber' value
     *
     * @param string $value
     */
    public function setBankAccountNumber($value = null)
    {
        $this->BankAccountNumber = $value;
    }

    /**
     * Check if 'BankName' has a value
     *
     * @return bool
     */
    public function hasBankName()
    {
        return $this->BankName !== null;
    }

    /**
     * Get 'BankName' value
     *
     * @return string
     */
    public function getBankName()
    {
        return $this->BankName;
    }

    /**
     * Set 'BankName' value
     *
     * @param string $value
     */
    public function setBankName($value = null)
    {
        $this->BankName = $value;
    }

    /**
     * Check if 'BankId' has a value
     *
     * @return bool
     */
    public function hasBankId()
    {
        return $this->BankId !== null;
    }

    /**
     * Get 'BankId' value
     *
     * @return string
     */
    public function getBankId()
    {
        return $this->BankId;
    }

    /**
     * Set 'BankId' value
     *
     * @param string $value
     */
    public function setBankId($value = null)
    {
        $this->BankId = $value;
    }

    /**
     * Check if 'Department' has a value
     *
     * @return bool
     */
    public function hasDepartment()
    {
        return $this->Department !== null;
    }

    /**
     * Get 'Department' value
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->Department;
    }

    /**
     * Set 'Department' value
     *
     * @param string $value
     */
    public function setDepartment($value = null)
    {
        $this->Department = $value;
    }

    /**
     * Check if 'OrganizationAdditionalInfo' has a value
     *
     * @return bool
     */
    public function hasOrganizationAdditionalInfo()
    {
        return $this->OrganizationAdditionalInfo !== null;
    }

    /**
     * Get 'OrganizationAdditionalInfo' value
     *
     * @return string
     */
    public function getOrganizationAdditionalInfo()
    {
        return $this->OrganizationAdditionalInfo;
    }

    /**
     * Set 'OrganizationAdditionalInfo' value
     *
     * @param string $value
     */
    public function setOrganizationAdditionalInfo($value = null)
    {
        $this->OrganizationAdditionalInfo = $value;
    }

    /**
     * Check if 'OrganizationOrPersonInfo' has a value
     *
     * @return bool
     */
    public function hasOrganizationOrPersonInfo()
    {
        return $this->OrganizationOrPersonInfo !== null;
    }

    /**
     * Get 'OrganizationOrPersonInfo' value
     *
     * @return string
     */
    public function getOrganizationOrPersonInfo()
    {
        return $this->OrganizationOrPersonInfo;
    }

    /**
     * Set 'OrganizationOrPersonInfo' value
     *
     * @param string $value
     */
    public function setOrganizationOrPersonInfo($value = null)
    {
        $this->OrganizationOrPersonInfo = $value;
    }

    /**
     * Check if 'IndividualEntityRegistrationCertificate' has a value
     *
     * @return bool
     */
    public function hasIndividualEntityRegistrationCertificate()
    {
        return $this->IndividualEntityRegistrationCertificate !== null;
    }

    /**
     * Get 'IndividualEntityRegistrationCertificate' value
     *
     * @return string
     */
    public function getIndividualEntityRegistrationCertificate()
    {
        return $this->IndividualEntityRegistrationCertificate;
    }

    /**
     * Set 'IndividualEntityRegistrationCertificate' value
     *
     * @param string $value
     */
    public function setIndividualEntityRegistrationCertificate($value = null)
    {
        $this->IndividualEntityRegistrationCertificate = $value;
    }

    /**
     * Check if 'Country' has a value
     *
     * @return bool
     */
    public function hasCountry()
    {
        return $this->Country !== null;
    }

    /**
     * Get 'Country' value
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->Country;
    }

    /**
     * Set 'Country' value
     *
     * @param string $value
     */
    public function setCountry($value = null)
    {
        $this->Country = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        if ( ! isset($values['OrgType'])) {
            throw new \InvalidArgumentException('Field "OrgType" (tag 7) is required but has no value.');
        }

        $message = new self();
        $values  = array_merge([
            'BoxId' => null,
            'OrgName' => null,
            'Inn' => null,
            'Kpp' => null,
            'Address' => null,
            'FnsParticipantId' => null,
            'Okopf' => null,
            'Okpo' => null,
            'Okdp' => null,
            'Phone' => null,
            'Email' => null,
            'CorrespondentAccount' => null,
            'BankAccountNumber' => null,
            'BankName' => null,
            'BankId' => null,
            'Department' => null,
            'OrganizationAdditionalInfo' => null,
            'OrganizationOrPersonInfo' => null,
            'IndividualEntityRegistrationCertificate' => null,
            'Country' => null
        ], $values);

        $message->setBoxId($values['BoxId']);
        $message->setOrgName($values['OrgName']);
        $message->setInn($values['Inn']);
        $message->setKpp($values['Kpp']);
        $message->setAddress($values['Address']);
        $message->setFnsParticipantId($values['FnsParticipantId']);
        $message->setOrgType($values['OrgType']);
        $message->setOkopf($values['Okopf']);
        $message->setOkpo($values['Okpo']);
        $message->setOkdp($values['Okdp']);
        $message->setPhone($values['Phone']);
        $message->setEmail($values['Email']);
        $message->setCorrespondentAccount($values['CorrespondentAccount']);
        $message->setBankAccountNumber($values['BankAccountNumber']);
        $message->setBankName($values['BankName']);
        $message->setBankId($values['BankId']);
        $message->setDepartment($values['Department']);
        $message->setOrganizationAdditionalInfo($values['OrganizationAdditionalInfo']);
        $message->setOrganizationOrPersonInfo($values['OrganizationOrPersonInfo']);
        $message->setIndividualEntityRegistrationCertificate($values['IndividualEntityRegistrationCertificate']);
        $message->setCountry($values['Country']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'ExtendedOrganizationInfo',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'BoxId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'OrgName',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'Inn',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'Kpp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'Address',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Address'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'FnsParticipantId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'OrgType',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Invoicing.Organizations.OrgType'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'Okopf',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'Okpo',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'Okdp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'Phone',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'Email',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'CorrespondentAccount',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'BankAccountNumber',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'BankName',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'BankId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 17,
                    'name' => 'Department',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 18,
                    'name' => 'OrganizationAdditionalInfo',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 19,
                    'name' => 'OrganizationOrPersonInfo',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 20,
                    'name' => 'IndividualEntityRegistrationCertificate',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 21,
                    'name' => 'Country',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->OrgType === null) {
            throw new \UnexpectedValueException('Field "\\AgentSIB\\Diadoc\\Api\\Proto\\Invoicing\\Organizations\\ExtendedOrganizationInfo#OrgType" (tag 7) is required but has no value.');
        }

        if ($this->BoxId !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeString($stream, $this->BoxId);
        }

        if ($this->OrgName !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeString($stream, $this->OrgName);
        }

        if ($this->Inn !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeString($stream, $this->Inn);
        }

        if ($this->Kpp !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeString($stream, $this->Kpp);
        }

        if ($this->Address !== null) {
            $writer->writeVarint($stream, 42);
            $writer->writeVarint($stream, $this->Address->serializedSize($sizeContext));
            $this->Address->writeTo($context);
        }

        if ($this->FnsParticipantId !== null) {
            $writer->writeVarint($stream, 50);
            $writer->writeString($stream, $this->FnsParticipantId);
        }

        if ($this->OrgType !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->OrgType->value());
        }

        if ($this->Okopf !== null) {
            $writer->writeVarint($stream, 66);
            $writer->writeString($stream, $this->Okopf);
        }

        if ($this->Okpo !== null) {
            $writer->writeVarint($stream, 74);
            $writer->writeString($stream, $this->Okpo);
        }

        if ($this->Okdp !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeString($stream, $this->Okdp);
        }

        if ($this->Phone !== null) {
            $writer->writeVarint($stream, 90);
            $writer->writeString($stream, $this->Phone);
        }

        if ($this->Email !== null) {
            $writer->writeVarint($stream, 98);
            $writer->writeString($stream, $this->Email);
        }

        if ($this->CorrespondentAccount !== null) {
            $writer->writeVarint($stream, 106);
            $writer->writeString($stream, $this->CorrespondentAccount);
        }

        if ($this->BankAccountNumber !== null) {
            $writer->writeVarint($stream, 114);
            $writer->writeString($stream, $this->BankAccountNumber);
        }

        if ($this->BankName !== null) {
            $writer->writeVarint($stream, 122);
            $writer->writeString($stream, $this->BankName);
        }

        if ($this->BankId !== null) {
            $writer->writeVarint($stream, 130);
            $writer->writeString($stream, $this->BankId);
        }

        if ($this->Department !== null) {
            $writer->writeVarint($stream, 138);
            $writer->writeString($stream, $this->Department);
        }

        if ($this->OrganizationAdditionalInfo !== null) {
            $writer->writeVarint($stream, 146);
            $writer->writeString($stream, $this->OrganizationAdditionalInfo);
        }

        if ($this->OrganizationOrPersonInfo !== null) {
            $writer->writeVarint($stream, 154);
            $writer->writeString($stream, $this->OrganizationOrPersonInfo);
        }

        if ($this->IndividualEntityRegistrationCertificate !== null) {
            $writer->writeVarint($stream, 162);
            $writer->writeString($stream, $this->IndividualEntityRegistrationCertificate);
        }

        if ($this->Country !== null) {
            $writer->writeVarint($stream, 170);
            $writer->writeString($stream, $this->Country);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BoxId = $reader->readString($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->OrgName = $reader->readString($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Inn = $reader->readString($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Kpp = $reader->readString($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Address();

                $this->Address = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->FnsParticipantId = $reader->readString($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->OrgType = \AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations\OrgType::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Okopf = $reader->readString($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Okpo = $reader->readString($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Okdp = $reader->readString($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Phone = $reader->readString($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Email = $reader->readString($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->CorrespondentAccount = $reader->readString($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BankAccountNumber = $reader->readString($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BankName = $reader->readString($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BankId = $reader->readString($stream);

                continue;
            }

            if ($tag === 17) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Department = $reader->readString($stream);

                continue;
            }

            if ($tag === 18) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->OrganizationAdditionalInfo = $reader->readString($stream);

                continue;
            }

            if ($tag === 19) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->OrganizationOrPersonInfo = $reader->readString($stream);

                continue;
            }

            if ($tag === 20) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->IndividualEntityRegistrationCertificate = $reader->readString($stream);

                continue;
            }

            if ($tag === 21) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Country = $reader->readString($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->BoxId !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->BoxId);
        }

        if ($this->OrgName !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->OrgName);
        }

        if ($this->Inn !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Inn);
        }

        if ($this->Kpp !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Kpp);
        }

        if ($this->Address !== null) {
            $innerSize = $this->Address->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->FnsParticipantId !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->FnsParticipantId);
        }

        if ($this->OrgType !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->OrgType->value());
        }

        if ($this->Okopf !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Okopf);
        }

        if ($this->Okpo !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Okpo);
        }

        if ($this->Okdp !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Okdp);
        }

        if ($this->Phone !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Phone);
        }

        if ($this->Email !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Email);
        }

        if ($this->CorrespondentAccount !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->CorrespondentAccount);
        }

        if ($this->BankAccountNumber !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->BankAccountNumber);
        }

        if ($this->BankName !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->BankName);
        }

        if ($this->BankId !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->BankId);
        }

        if ($this->Department !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->Department);
        }

        if ($this->OrganizationAdditionalInfo !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->OrganizationAdditionalInfo);
        }

        if ($this->OrganizationOrPersonInfo !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->OrganizationOrPersonInfo);
        }

        if ($this->IndividualEntityRegistrationCertificate !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->IndividualEntityRegistrationCertificate);
        }

        if ($this->Country !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->Country);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->BoxId = null;
        $this->OrgName = null;
        $this->Inn = null;
        $this->Kpp = null;
        $this->Address = null;
        $this->FnsParticipantId = null;
        $this->OrgType = null;
        $this->Okopf = null;
        $this->Okpo = null;
        $this->Okdp = null;
        $this->Phone = null;
        $this->Email = null;
        $this->CorrespondentAccount = null;
        $this->BankAccountNumber = null;
        $this->BankName = null;
        $this->BankId = null;
        $this->Department = null;
        $this->OrganizationAdditionalInfo = null;
        $this->OrganizationOrPersonInfo = null;
        $this->IndividualEntityRegistrationCertificate = null;
        $this->Country = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \AgentSIB\Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->BoxId = ($message->BoxId !== null) ? $message->BoxId : $this->BoxId;
        $this->OrgName = ($message->OrgName !== null) ? $message->OrgName : $this->OrgName;
        $this->Inn = ($message->Inn !== null) ? $message->Inn : $this->Inn;
        $this->Kpp = ($message->Kpp !== null) ? $message->Kpp : $this->Kpp;
        $this->Address = ($message->Address !== null) ? $message->Address : $this->Address;
        $this->FnsParticipantId = ($message->FnsParticipantId !== null) ? $message->FnsParticipantId : $this->FnsParticipantId;
        $this->OrgType = ($message->OrgType !== null) ? $message->OrgType : $this->OrgType;
        $this->Okopf = ($message->Okopf !== null) ? $message->Okopf : $this->Okopf;
        $this->Okpo = ($message->Okpo !== null) ? $message->Okpo : $this->Okpo;
        $this->Okdp = ($message->Okdp !== null) ? $message->Okdp : $this->Okdp;
        $this->Phone = ($message->Phone !== null) ? $message->Phone : $this->Phone;
        $this->Email = ($message->Email !== null) ? $message->Email : $this->Email;
        $this->CorrespondentAccount = ($message->CorrespondentAccount !== null) ? $message->CorrespondentAccount : $this->CorrespondentAccount;
        $this->BankAccountNumber = ($message->BankAccountNumber !== null) ? $message->BankAccountNumber : $this->BankAccountNumber;
        $this->BankName = ($message->BankName !== null) ? $message->BankName : $this->BankName;
        $this->BankId = ($message->BankId !== null) ? $message->BankId : $this->BankId;
        $this->Department = ($message->Department !== null) ? $message->Department : $this->Department;
        $this->OrganizationAdditionalInfo = ($message->OrganizationAdditionalInfo !== null) ? $message->OrganizationAdditionalInfo : $this->OrganizationAdditionalInfo;
        $this->OrganizationOrPersonInfo = ($message->OrganizationOrPersonInfo !== null) ? $message->OrganizationOrPersonInfo : $this->OrganizationOrPersonInfo;
        $this->IndividualEntityRegistrationCertificate = ($message->IndividualEntityRegistrationCertificate !== null) ? $message->IndividualEntityRegistrationCertificate : $this->IndividualEntityRegistrationCertificate;
        $this->Country = ($message->Country !== null) ? $message->Country : $this->Country;
    }


}

