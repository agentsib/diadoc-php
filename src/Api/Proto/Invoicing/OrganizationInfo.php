<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Invoicing/OrganizationInfo.proto
 */


namespace AgentSIB\Diadoc\Api\Proto\Invoicing;

/**
 * Protobuf message : AgentSIB.Diadoc.Api.Proto.Invoicing.OrganizationInfo
 */
class OrganizationInfo extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * Name required string = 1
     *
     * @var string
     */
    protected $Name = null;

    /**
     * Inn optional string = 2
     *
     * @var string
     */
    protected $Inn = null;

    /**
     * Kpp optional string = 3
     *
     * @var string
     */
    protected $Kpp = null;

    /**
     * Address required message = 4
     *
     * @var \AgentSIB\Diadoc\Api\Proto\Address
     */
    protected $Address = null;

    /**
     * IsSoleProprietor optional bool = 5
     *
     * @var bool
     */
    protected $IsSoleProprietor = null;

    /**
     * Okopf optional string = 6
     *
     * @var string
     */
    protected $Okopf = null;

    /**
     * Okpo optional string = 7
     *
     * @var string
     */
    protected $Okpo = null;

    /**
     * Okdp optional string = 8
     *
     * @var string
     */
    protected $Okdp = null;

    /**
     * Phone optional string = 9
     *
     * @var string
     */
    protected $Phone = null;

    /**
     * Fax optional string = 10
     *
     * @var string
     */
    protected $Fax = null;

    /**
     * BankAccountNumber optional string = 11
     *
     * @var string
     */
    protected $BankAccountNumber = null;

    /**
     * BankName optional string = 12
     *
     * @var string
     */
    protected $BankName = null;

    /**
     * BankId optional string = 13
     *
     * @var string
     */
    protected $BankId = null;

    /**
     * Department optional string = 14
     *
     * @var string
     */
    protected $Department = null;

    /**
     * FnsParticipantId optional string = 15
     *
     * @var string
     */
    protected $FnsParticipantId = null;

    /**
     * {@inheritdoc}
     */
    public function __construct($stream = null, \Protobuf\Configuration $configuration = null)
    {
        $this->IsSoleProprietor = false;

        parent::__construct($stream, $configuration);
    }

    /**
     * Check if 'Name' has a value
     *
     * @return bool
     */
    public function hasName()
    {
        return $this->Name !== null;
    }

    /**
     * Get 'Name' value
     *
     * @return string
     */
    public function getName()
    {
        return $this->Name;
    }

    /**
     * Set 'Name' value
     *
     * @param string $value
     */
    public function setName($value)
    {
        $this->Name = $value;
    }

    /**
     * Check if 'Inn' has a value
     *
     * @return bool
     */
    public function hasInn()
    {
        return $this->Inn !== null;
    }

    /**
     * Get 'Inn' value
     *
     * @return string
     */
    public function getInn()
    {
        return $this->Inn;
    }

    /**
     * Set 'Inn' value
     *
     * @param string $value
     */
    public function setInn($value = null)
    {
        $this->Inn = $value;
    }

    /**
     * Check if 'Kpp' has a value
     *
     * @return bool
     */
    public function hasKpp()
    {
        return $this->Kpp !== null;
    }

    /**
     * Get 'Kpp' value
     *
     * @return string
     */
    public function getKpp()
    {
        return $this->Kpp;
    }

    /**
     * Set 'Kpp' value
     *
     * @param string $value
     */
    public function setKpp($value = null)
    {
        $this->Kpp = $value;
    }

    /**
     * Check if 'Address' has a value
     *
     * @return bool
     */
    public function hasAddress()
    {
        return $this->Address !== null;
    }

    /**
     * Get 'Address' value
     *
     * @return \AgentSIB\Diadoc\Api\Proto\Address
     */
    public function getAddress()
    {
        return $this->Address;
    }

    /**
     * Set 'Address' value
     *
     * @param \AgentSIB\Diadoc\Api\Proto\Address $value
     */
    public function setAddress(\AgentSIB\Diadoc\Api\Proto\Address $value)
    {
        $this->Address = $value;
    }

    /**
     * Check if 'IsSoleProprietor' has a value
     *
     * @return bool
     */
    public function hasIsSoleProprietor()
    {
        return $this->IsSoleProprietor !== null;
    }

    /**
     * Get 'IsSoleProprietor' value
     *
     * @return bool
     */
    public function getIsSoleProprietor()
    {
        return $this->IsSoleProprietor;
    }

    /**
     * Set 'IsSoleProprietor' value
     *
     * @param bool $value
     */
    public function setIsSoleProprietor($value = null)
    {
        $this->IsSoleProprietor = $value;
    }

    /**
     * Check if 'Okopf' has a value
     *
     * @return bool
     */
    public function hasOkopf()
    {
        return $this->Okopf !== null;
    }

    /**
     * Get 'Okopf' value
     *
     * @return string
     */
    public function getOkopf()
    {
        return $this->Okopf;
    }

    /**
     * Set 'Okopf' value
     *
     * @param string $value
     */
    public function setOkopf($value = null)
    {
        $this->Okopf = $value;
    }

    /**
     * Check if 'Okpo' has a value
     *
     * @return bool
     */
    public function hasOkpo()
    {
        return $this->Okpo !== null;
    }

    /**
     * Get 'Okpo' value
     *
     * @return string
     */
    public function getOkpo()
    {
        return $this->Okpo;
    }

    /**
     * Set 'Okpo' value
     *
     * @param string $value
     */
    public function setOkpo($value = null)
    {
        $this->Okpo = $value;
    }

    /**
     * Check if 'Okdp' has a value
     *
     * @return bool
     */
    public function hasOkdp()
    {
        return $this->Okdp !== null;
    }

    /**
     * Get 'Okdp' value
     *
     * @return string
     */
    public function getOkdp()
    {
        return $this->Okdp;
    }

    /**
     * Set 'Okdp' value
     *
     * @param string $value
     */
    public function setOkdp($value = null)
    {
        $this->Okdp = $value;
    }

    /**
     * Check if 'Phone' has a value
     *
     * @return bool
     */
    public function hasPhone()
    {
        return $this->Phone !== null;
    }

    /**
     * Get 'Phone' value
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->Phone;
    }

    /**
     * Set 'Phone' value
     *
     * @param string $value
     */
    public function setPhone($value = null)
    {
        $this->Phone = $value;
    }

    /**
     * Check if 'Fax' has a value
     *
     * @return bool
     */
    public function hasFax()
    {
        return $this->Fax !== null;
    }

    /**
     * Get 'Fax' value
     *
     * @return string
     */
    public function getFax()
    {
        return $this->Fax;
    }

    /**
     * Set 'Fax' value
     *
     * @param string $value
     */
    public function setFax($value = null)
    {
        $this->Fax = $value;
    }

    /**
     * Check if 'BankAccountNumber' has a value
     *
     * @return bool
     */
    public function hasBankAccountNumber()
    {
        return $this->BankAccountNumber !== null;
    }

    /**
     * Get 'BankAccountNumber' value
     *
     * @return string
     */
    public function getBankAccountNumber()
    {
        return $this->BankAccountNumber;
    }

    /**
     * Set 'BankAccountNumber' value
     *
     * @param string $value
     */
    public function setBankAccountNumber($value = null)
    {
        $this->BankAccountNumber = $value;
    }

    /**
     * Check if 'BankName' has a value
     *
     * @return bool
     */
    public function hasBankName()
    {
        return $this->BankName !== null;
    }

    /**
     * Get 'BankName' value
     *
     * @return string
     */
    public function getBankName()
    {
        return $this->BankName;
    }

    /**
     * Set 'BankName' value
     *
     * @param string $value
     */
    public function setBankName($value = null)
    {
        $this->BankName = $value;
    }

    /**
     * Check if 'BankId' has a value
     *
     * @return bool
     */
    public function hasBankId()
    {
        return $this->BankId !== null;
    }

    /**
     * Get 'BankId' value
     *
     * @return string
     */
    public function getBankId()
    {
        return $this->BankId;
    }

    /**
     * Set 'BankId' value
     *
     * @param string $value
     */
    public function setBankId($value = null)
    {
        $this->BankId = $value;
    }

    /**
     * Check if 'Department' has a value
     *
     * @return bool
     */
    public function hasDepartment()
    {
        return $this->Department !== null;
    }

    /**
     * Get 'Department' value
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->Department;
    }

    /**
     * Set 'Department' value
     *
     * @param string $value
     */
    public function setDepartment($value = null)
    {
        $this->Department = $value;
    }

    /**
     * Check if 'FnsParticipantId' has a value
     *
     * @return bool
     */
    public function hasFnsParticipantId()
    {
        return $this->FnsParticipantId !== null;
    }

    /**
     * Get 'FnsParticipantId' value
     *
     * @return string
     */
    public function getFnsParticipantId()
    {
        return $this->FnsParticipantId;
    }

    /**
     * Set 'FnsParticipantId' value
     *
     * @param string $value
     */
    public function setFnsParticipantId($value = null)
    {
        $this->FnsParticipantId = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        if ( ! isset($values['Name'])) {
            throw new \InvalidArgumentException('Field "Name" (tag 1) is required but has no value.');
        }

        if ( ! isset($values['Address'])) {
            throw new \InvalidArgumentException('Field "Address" (tag 4) is required but has no value.');
        }

        $message = new self();
        $values  = array_merge([
            'Inn' => null,
            'Kpp' => null,
            'IsSoleProprietor' => false,
            'Okopf' => null,
            'Okpo' => null,
            'Okdp' => null,
            'Phone' => null,
            'Fax' => null,
            'BankAccountNumber' => null,
            'BankName' => null,
            'BankId' => null,
            'Department' => null,
            'FnsParticipantId' => null
        ], $values);

        $message->setName($values['Name']);
        $message->setInn($values['Inn']);
        $message->setKpp($values['Kpp']);
        $message->setAddress($values['Address']);
        $message->setIsSoleProprietor($values['IsSoleProprietor']);
        $message->setOkopf($values['Okopf']);
        $message->setOkpo($values['Okpo']);
        $message->setOkdp($values['Okdp']);
        $message->setPhone($values['Phone']);
        $message->setFax($values['Fax']);
        $message->setBankAccountNumber($values['BankAccountNumber']);
        $message->setBankName($values['BankName']);
        $message->setBankId($values['BankId']);
        $message->setDepartment($values['Department']);
        $message->setFnsParticipantId($values['FnsParticipantId']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'OrganizationInfo',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'Name',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'Inn',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'Kpp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'Address',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED(),
                    'type_name' => '.AgentSIB.Diadoc.Api.Proto.Address'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'IsSoleProprietor',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => false
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'Okopf',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'Okpo',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'Okdp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'Phone',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'Fax',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'BankAccountNumber',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'BankName',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'BankId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'Department',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'FnsParticipantId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->Name === null) {
            throw new \UnexpectedValueException('Field "\\AgentSIB\\Diadoc\\Api\\Proto\\Invoicing\\OrganizationInfo#Name" (tag 1) is required but has no value.');
        }

        if ($this->Address === null) {
            throw new \UnexpectedValueException('Field "\\AgentSIB\\Diadoc\\Api\\Proto\\Invoicing\\OrganizationInfo#Address" (tag 4) is required but has no value.');
        }

        if ($this->Name !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeString($stream, $this->Name);
        }

        if ($this->Inn !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeString($stream, $this->Inn);
        }

        if ($this->Kpp !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeString($stream, $this->Kpp);
        }

        if ($this->Address !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeVarint($stream, $this->Address->serializedSize($sizeContext));
            $this->Address->writeTo($context);
        }

        if ($this->IsSoleProprietor !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeBool($stream, $this->IsSoleProprietor);
        }

        if ($this->Okopf !== null) {
            $writer->writeVarint($stream, 50);
            $writer->writeString($stream, $this->Okopf);
        }

        if ($this->Okpo !== null) {
            $writer->writeVarint($stream, 58);
            $writer->writeString($stream, $this->Okpo);
        }

        if ($this->Okdp !== null) {
            $writer->writeVarint($stream, 66);
            $writer->writeString($stream, $this->Okdp);
        }

        if ($this->Phone !== null) {
            $writer->writeVarint($stream, 74);
            $writer->writeString($stream, $this->Phone);
        }

        if ($this->Fax !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeString($stream, $this->Fax);
        }

        if ($this->BankAccountNumber !== null) {
            $writer->writeVarint($stream, 90);
            $writer->writeString($stream, $this->BankAccountNumber);
        }

        if ($this->BankName !== null) {
            $writer->writeVarint($stream, 98);
            $writer->writeString($stream, $this->BankName);
        }

        if ($this->BankId !== null) {
            $writer->writeVarint($stream, 106);
            $writer->writeString($stream, $this->BankId);
        }

        if ($this->Department !== null) {
            $writer->writeVarint($stream, 114);
            $writer->writeString($stream, $this->Department);
        }

        if ($this->FnsParticipantId !== null) {
            $writer->writeVarint($stream, 122);
            $writer->writeString($stream, $this->FnsParticipantId);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Name = $reader->readString($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Inn = $reader->readString($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Kpp = $reader->readString($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \AgentSIB\Diadoc\Api\Proto\Address();

                $this->Address = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->IsSoleProprietor = $reader->readBool($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Okopf = $reader->readString($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Okpo = $reader->readString($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Okdp = $reader->readString($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Phone = $reader->readString($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Fax = $reader->readString($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BankAccountNumber = $reader->readString($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BankName = $reader->readString($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->BankId = $reader->readString($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->Department = $reader->readString($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->FnsParticipantId = $reader->readString($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->Name !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Name);
        }

        if ($this->Inn !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Inn);
        }

        if ($this->Kpp !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Kpp);
        }

        if ($this->Address !== null) {
            $innerSize = $this->Address->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->IsSoleProprietor !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->Okopf !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Okopf);
        }

        if ($this->Okpo !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Okpo);
        }

        if ($this->Okdp !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Okdp);
        }

        if ($this->Phone !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Phone);
        }

        if ($this->Fax !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Fax);
        }

        if ($this->BankAccountNumber !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->BankAccountNumber);
        }

        if ($this->BankName !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->BankName);
        }

        if ($this->BankId !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->BankId);
        }

        if ($this->Department !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->Department);
        }

        if ($this->FnsParticipantId !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->FnsParticipantId);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->Name = null;
        $this->Inn = null;
        $this->Kpp = null;
        $this->Address = null;
        $this->IsSoleProprietor = false;
        $this->Okopf = null;
        $this->Okpo = null;
        $this->Okdp = null;
        $this->Phone = null;
        $this->Fax = null;
        $this->BankAccountNumber = null;
        $this->BankName = null;
        $this->BankId = null;
        $this->Department = null;
        $this->FnsParticipantId = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \AgentSIB\Diadoc\Api\Proto\Invoicing\OrganizationInfo) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->Name = ($message->Name !== null) ? $message->Name : $this->Name;
        $this->Inn = ($message->Inn !== null) ? $message->Inn : $this->Inn;
        $this->Kpp = ($message->Kpp !== null) ? $message->Kpp : $this->Kpp;
        $this->Address = ($message->Address !== null) ? $message->Address : $this->Address;
        $this->IsSoleProprietor = ($message->IsSoleProprietor !== null) ? $message->IsSoleProprietor : $this->IsSoleProprietor;
        $this->Okopf = ($message->Okopf !== null) ? $message->Okopf : $this->Okopf;
        $this->Okpo = ($message->Okpo !== null) ? $message->Okpo : $this->Okpo;
        $this->Okdp = ($message->Okdp !== null) ? $message->Okdp : $this->Okdp;
        $this->Phone = ($message->Phone !== null) ? $message->Phone : $this->Phone;
        $this->Fax = ($message->Fax !== null) ? $message->Fax : $this->Fax;
        $this->BankAccountNumber = ($message->BankAccountNumber !== null) ? $message->BankAccountNumber : $this->BankAccountNumber;
        $this->BankName = ($message->BankName !== null) ? $message->BankName : $this->BankName;
        $this->BankId = ($message->BankId !== null) ? $message->BankId : $this->BankId;
        $this->Department = ($message->Department !== null) ? $message->Department : $this->Department;
        $this->FnsParticipantId = ($message->FnsParticipantId !== null) ? $message->FnsParticipantId : $this->FnsParticipantId;
    }


}

