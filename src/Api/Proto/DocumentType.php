<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : DocumentType.proto
 */


namespace AgentSIB\Diadoc\Api\Proto;

/**
 * Protobuf enum : AgentSIB.Diadoc.Api.Proto.DocumentType
 */
class DocumentType extends \Protobuf\Enum
{

    /**
     * UnknownDocumentType = -1
     */
    const UnknownDocumentType_VALUE = -1;

    /**
     * Nonformalized = 0
     */
    const Nonformalized_VALUE = 0;

    /**
     * Invoice = 1
     */
    const Invoice_VALUE = 1;

    /**
     * TrustConnectionRequest = 11
     */
    const TrustConnectionRequest_VALUE = 11;

    /**
     * Torg12 = 12
     */
    const Torg12_VALUE = 12;

    /**
     * InvoiceRevision = 13
     */
    const InvoiceRevision_VALUE = 13;

    /**
     * InvoiceCorrection = 14
     */
    const InvoiceCorrection_VALUE = 14;

    /**
     * InvoiceCorrectionRevision = 15
     */
    const InvoiceCorrectionRevision_VALUE = 15;

    /**
     * AcceptanceCertificate = 16
     */
    const AcceptanceCertificate_VALUE = 16;

    /**
     * ProformaInvoice = 18
     */
    const ProformaInvoice_VALUE = 18;

    /**
     * XmlTorg12 = 19
     */
    const XmlTorg12_VALUE = 19;

    /**
     * XmlAcceptanceCertificate = 20
     */
    const XmlAcceptanceCertificate_VALUE = 20;

    /**
     * PriceList = 26
     */
    const PriceList_VALUE = 26;

    /**
     * PriceListAgreement = 30
     */
    const PriceListAgreement_VALUE = 30;

    /**
     * CertificateRegistry = 34
     */
    const CertificateRegistry_VALUE = 34;

    /**
     * ReconciliationAct = 35
     */
    const ReconciliationAct_VALUE = 35;

    /**
     * Contract = 36
     */
    const Contract_VALUE = 36;

    /**
     * Torg13 = 37
     */
    const Torg13_VALUE = 37;

    /**
     * ServiceDetails = 38
     */
    const ServiceDetails_VALUE = 38;

    /**
     * SupplementaryAgreement = 40
     */
    const SupplementaryAgreement_VALUE = 40;

    /**
     * UniversalTransferDocument = 41
     */
    const UniversalTransferDocument_VALUE = 41;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $UnknownDocumentType = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $Nonformalized = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $Invoice = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $TrustConnectionRequest = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $Torg12 = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $InvoiceRevision = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $InvoiceCorrection = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $InvoiceCorrectionRevision = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $AcceptanceCertificate = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $ProformaInvoice = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $XmlTorg12 = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $XmlAcceptanceCertificate = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $PriceList = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $PriceListAgreement = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $CertificateRegistry = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $ReconciliationAct = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $Contract = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $Torg13 = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $ServiceDetails = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $SupplementaryAgreement = null;

    /**
     * @var \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    protected static $UniversalTransferDocument = null;

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function UnknownDocumentType()
    {
        if (self::$UnknownDocumentType !== null) {
            return self::$UnknownDocumentType;
        }

        return self::$UnknownDocumentType = new self('UnknownDocumentType', self::UnknownDocumentType_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function Nonformalized()
    {
        if (self::$Nonformalized !== null) {
            return self::$Nonformalized;
        }

        return self::$Nonformalized = new self('Nonformalized', self::Nonformalized_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function Invoice()
    {
        if (self::$Invoice !== null) {
            return self::$Invoice;
        }

        return self::$Invoice = new self('Invoice', self::Invoice_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function TrustConnectionRequest()
    {
        if (self::$TrustConnectionRequest !== null) {
            return self::$TrustConnectionRequest;
        }

        return self::$TrustConnectionRequest = new self('TrustConnectionRequest', self::TrustConnectionRequest_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function Torg12()
    {
        if (self::$Torg12 !== null) {
            return self::$Torg12;
        }

        return self::$Torg12 = new self('Torg12', self::Torg12_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function InvoiceRevision()
    {
        if (self::$InvoiceRevision !== null) {
            return self::$InvoiceRevision;
        }

        return self::$InvoiceRevision = new self('InvoiceRevision', self::InvoiceRevision_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function InvoiceCorrection()
    {
        if (self::$InvoiceCorrection !== null) {
            return self::$InvoiceCorrection;
        }

        return self::$InvoiceCorrection = new self('InvoiceCorrection', self::InvoiceCorrection_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function InvoiceCorrectionRevision()
    {
        if (self::$InvoiceCorrectionRevision !== null) {
            return self::$InvoiceCorrectionRevision;
        }

        return self::$InvoiceCorrectionRevision = new self('InvoiceCorrectionRevision', self::InvoiceCorrectionRevision_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function AcceptanceCertificate()
    {
        if (self::$AcceptanceCertificate !== null) {
            return self::$AcceptanceCertificate;
        }

        return self::$AcceptanceCertificate = new self('AcceptanceCertificate', self::AcceptanceCertificate_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function ProformaInvoice()
    {
        if (self::$ProformaInvoice !== null) {
            return self::$ProformaInvoice;
        }

        return self::$ProformaInvoice = new self('ProformaInvoice', self::ProformaInvoice_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function XmlTorg12()
    {
        if (self::$XmlTorg12 !== null) {
            return self::$XmlTorg12;
        }

        return self::$XmlTorg12 = new self('XmlTorg12', self::XmlTorg12_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function XmlAcceptanceCertificate()
    {
        if (self::$XmlAcceptanceCertificate !== null) {
            return self::$XmlAcceptanceCertificate;
        }

        return self::$XmlAcceptanceCertificate = new self('XmlAcceptanceCertificate', self::XmlAcceptanceCertificate_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function PriceList()
    {
        if (self::$PriceList !== null) {
            return self::$PriceList;
        }

        return self::$PriceList = new self('PriceList', self::PriceList_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function PriceListAgreement()
    {
        if (self::$PriceListAgreement !== null) {
            return self::$PriceListAgreement;
        }

        return self::$PriceListAgreement = new self('PriceListAgreement', self::PriceListAgreement_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function CertificateRegistry()
    {
        if (self::$CertificateRegistry !== null) {
            return self::$CertificateRegistry;
        }

        return self::$CertificateRegistry = new self('CertificateRegistry', self::CertificateRegistry_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function ReconciliationAct()
    {
        if (self::$ReconciliationAct !== null) {
            return self::$ReconciliationAct;
        }

        return self::$ReconciliationAct = new self('ReconciliationAct', self::ReconciliationAct_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function Contract()
    {
        if (self::$Contract !== null) {
            return self::$Contract;
        }

        return self::$Contract = new self('Contract', self::Contract_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function Torg13()
    {
        if (self::$Torg13 !== null) {
            return self::$Torg13;
        }

        return self::$Torg13 = new self('Torg13', self::Torg13_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function ServiceDetails()
    {
        if (self::$ServiceDetails !== null) {
            return self::$ServiceDetails;
        }

        return self::$ServiceDetails = new self('ServiceDetails', self::ServiceDetails_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function SupplementaryAgreement()
    {
        if (self::$SupplementaryAgreement !== null) {
            return self::$SupplementaryAgreement;
        }

        return self::$SupplementaryAgreement = new self('SupplementaryAgreement', self::SupplementaryAgreement_VALUE);
    }

    /**
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function UniversalTransferDocument()
    {
        if (self::$UniversalTransferDocument !== null) {
            return self::$UniversalTransferDocument;
        }

        return self::$UniversalTransferDocument = new self('UniversalTransferDocument', self::UniversalTransferDocument_VALUE);
    }

    /**
     * @param int $value
     * @return \AgentSIB\Diadoc\Api\Proto\DocumentType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case -1: return self::UnknownDocumentType();
            case 0: return self::Nonformalized();
            case 1: return self::Invoice();
            case 11: return self::TrustConnectionRequest();
            case 12: return self::Torg12();
            case 13: return self::InvoiceRevision();
            case 14: return self::InvoiceCorrection();
            case 15: return self::InvoiceCorrectionRevision();
            case 16: return self::AcceptanceCertificate();
            case 18: return self::ProformaInvoice();
            case 19: return self::XmlTorg12();
            case 20: return self::XmlAcceptanceCertificate();
            case 26: return self::PriceList();
            case 30: return self::PriceListAgreement();
            case 34: return self::CertificateRegistry();
            case 35: return self::ReconciliationAct();
            case 36: return self::Contract();
            case 37: return self::Torg13();
            case 38: return self::ServiceDetails();
            case 40: return self::SupplementaryAgreement();
            case 41: return self::UniversalTransferDocument();
            default: return null;
        }
    }


}

